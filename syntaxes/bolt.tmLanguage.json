{
  "scopeName": "source.bolt",
  "name": "Bolt",
  "fileTypes": ["bt"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#constants" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#functionCalls" },
    { "include": "#variableDefinitions" },
    { "include": "#identifiers" },
    { "include": "#operators" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.bolt",
          "match": "//.*$"
        },
        {
          "name": "comment.block.bolt",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.bolt",
          "match": "\\b(immut|mut|static|return|function|type|struct|union|enum|own|weak|borrow|@)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.bolt",
          "match": "\\b(char|short|int|long|void|null)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.bolt",
          "match": "\\b(true|false|null|undefined|NaN|Infinity)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.bolt",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.bolt",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.bolt",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.bolt",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.template.bolt",
          "begin": "`",
          "end": "`",
          "patterns": [
            {
              "name": "constant.character.escape.bolt",
              "match": "\\\\."
            },
            {
              "name": "meta.embedded.expression.bolt",
              "begin": "\\$\\{",
              "end": "\\}"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.bolt",
          "match": "\\b((0x[0-9a-fA-F]+)|(0b[01]+)|(0o[0-7]+)|([0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?))\\b"
        }
      ]
    },
    "functionCalls": {
      "patterns": [
        {
          "name": "entity.name.function.call.bolt",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*\\()"
        }
      ]
    },
    "variableDefinitions": {
      "patterns": [
        {
          "name": "variable.parameter.bolt",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*:)"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.readwrite.bolt",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.bolt",
          "match": "\\+\\+|--|==|!=|===|!==|=>|<=|>=|<|>|=|\\+|-|\\*|\\/|%|\\|\\||&&|!|\\?|:|\\^|~|\\||&|<<|>>|>>>"
        }
      ]
    }
  },
  "uuid": "a4a04cf1-16e7-4d0d-8b84-8d3ed3f8a6ff"
}
